<project name="streamsx.topology.test.python" default="all"
    xmlns:jacoco="antlib:org.jacoco.ant"
    >
    <description>
        Build the Streams Python tests.
    </description>
	
	<property name="testtk" location="spl/testtkpy"/>
	<property name="testtk_pip_op" location="spl/testtkpy_pip_op"/>
	<property name="testtk_pip_tk" location="spl/testtkpy_pip_toolkit"/>
	<property name="topology" location="topology"/>
        <property name="test.dir" location="unittests"/>

  <import file="../../common-build.xml"/>

    <property name="topology.toolkit.release" location="${tk}" />
    <echo message="Topology toolkit release: ${topology.toolkit.release}"/>

  <target name="test" depends="all,test.application.api,test.translation"/> 

  <target name="all"> 
	  <copy file="../../samples/python/com.ibm.streamsx.topology.pysamples/opt/python/streams/spl_samples.py"
	  	toDir="${testtk}/opt/python/streams"/>
	  <copy file="../../samples/python/com.ibm.streamsx.topology.pysamples/opt/python/streams/spl_kwargs.py"
	  	toDir="${testtk}/opt/python/streams"/>
	  <copy file="../../samples/python/com.ibm.streamsx.topology.pysamples/opt/python/streams/spl_sources.py"
	  	toDir="${testtk}/opt/python/streams"/>
	  <copy file="../../samples/python/com.ibm.streamsx.topology.pysamples/info.xml"
	  	toDir="${testtk}"/>
   </target>

	  <target name="test.application.api">
             <mkdir dir="${test.dir}"/>
             <tempfile property="pytests.test.dir" prefix="testrun" destDir="${test.dir}"/>
             <mkdir dir="${pytests.test.dir}"/>
	     <echo message="Topology python: ${topology.test.python}"/>
		   <exec executable="${topology.test.python}" dir="${pytests.test.dir}" failonerror="true">
		     <env key="PYTHONPATH" value="${topology.toolkit.release}/opt/python/packages:${topology}"/>
		     <arg value="-u"/>
		     <arg value="-m"/>
		     <arg value="unittest"/>
		     <arg value="discover"/>
		     <arg value="${topology}"/>
		     <arg value="-v"/>
		   </exec>
	   </target>
	   
	  <target name="test.mqtt.application.api">
		   <exec executable="${topology.test.python}" dir="${topology}" failonerror="true">
		     <env key="PYTHONPATH" value="${topology.toolkit.release}/opt/python/packages"/>
		     <arg value="mqtest1.py"/>
		   </exec>
	   </target>	   


     <target name="test.python3" description="Run all Python tests with python executable (assumed to be Python 3)">
         <property name="topology.test.python.force" value="python3"/>
        <!-- SPL Python operators are only supported in Python 3 -->
         <antcall inheritAll="yes">
            <target name="test.python2"/>
         </antcall>
         <ant inheritAll="no" dir="../java">
            <property name="topology.test.python" value="${topology.test.python.force}"/>
            <property name="topology.test.base.pattern" value="**/splpy/*Test.java"/>
            <target name="unittest.standalone"/>
            <target name="unittest.distributed"/>
         </ant>
     </target>

     <target name="test.python2" description="Run all Python tests with python executable (assumed to be Python 2)">
         <property name="topology.test.python.force" value="python"/>
         <exec executable="${topology.test.python.force}">
            <arg value="-V"/>
         </exec>
         <antcall inheritAll="no">
            <param name="topology.test.python" value="${topology.test.python.force}"/>
            <target name="test.application.api"/>
         </antcall>
         <ant inheritAll="no" dir="../java">
            <property name="topology.test.python" value="${topology.test.python.force}"/>
            <property name="topology.test.base.pattern" value="**/python/*Test.java"/>
            <target name="unittest.standalone"/>
            <target name="unittest.distributed"/>
         </ant>
     </target>

    <target name="test.translation" description="Run the translation tests">
        <exec executable="/bin/bash" dir="spl/translation" failonerror="true">
            <env key="PYTHONHOME" value="${topology.test.python.prefix}"/>
            <arg value="autorun.sh"/>
        </exec>
    </target>
</project>
