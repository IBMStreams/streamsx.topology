<?xml version="1.0" encoding="UTF-8"?><operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <javaOperatorModel>
    <!--Generated from com.ibm.streamsx.inet.http.HTTPStreamReader in impl/lib/com.ibm.streamsx.inet.jar at Wed Mar 20 13:15:06 CET 2019-->
    <context>
      <description>**This operator is deprecated.** Use HTTPRequest operator instead.

Connects to an HTTP endpoint, reads "chunks" of data and sends it to the output port. Every line read from the HTTP server endpoint is sent as a single tuple. If a connection is closed by the server, a WINDOW punctuation will be sent on port 0. Supported Authentications: Basic Authentication, OAuth 1.0a. Supported Compressions: Gzip, Deflate.

**Behavior in a consistent region**

This operator cannot be used inside a consistent region.</description>
      <iconUri size="16">HTTPGetStream_16.gif</iconUri>
      <iconUri size="32">HTTPGetStream_32.gif</iconUri>
      <metrics/>
      <executionSettings>
        <className>com.ibm.streamsx.inet.http.HTTPStreamReader</className>
      </executionSettings>
      <libraryDependencies>
        <library>
          <cmn:description>Operator class library</cmn:description>
          <cmn:managedLibrary>
            <cmn:libPath>../../impl/lib/com.ibm.streamsx.inet.jar</cmn:libPath>
            <cmn:libPath>../../opt/downloaded/*</cmn:libPath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
    </context>
    <parameters>
      <parameter>
        <name>acceptAllCertificates</name>
        <description>Accept all SSL certificates, even those that are self-signed. Setting this option will allow potentially insecure connections. Default is false.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>authenticationFile</name>
        <description>Path to the properties file containing authentication information. Authentication file is recommended to be stored in the application_dir/etc directory. Path of this file can be absolute or relative, if relative path is specified then it is relative to the application directory. See http_auth_basic.properties in the toolkits etc directory for a sample of basic authentication properties.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>authenticationProperty</name>
        <description>Properties to override those in the authentication file.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>-1</cardinality>
      </parameter>
      <parameter>
        <name>authenticationType</name>
        <description>Valid options are "oauth", "basic" and "none". Default is "none". If the "oauth" option is selected, the requests will be singed using OAuth 1.0a.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>backoff</name>
        <description>Use a backoff function for increasing the wait time between retries. Wait times increase by a factor of 10. Default is false</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>dataAttributeName</name>
        <description>Name of the attribute to populate the response data with. Default is "data"</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>disableCompression</name>
        <description>By default the client will ask the server to compress its reponse data using supported compressions (gzip, deflate). Setting this option to true will disable compressions. Default is false.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>extraHeaders</name>
        <description>Extra headers to send with request, format is "Header-Name: value".</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>-1</cardinality>
      </parameter>
      <parameter>
        <name>maxRetries</name>
        <description>Maximum number of retries in case of failures/disconnects.</description>
        <optional>true</optional>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>postData</name>
        <description>The value for this parameter will be sent to the server as a POST request body. The value is expected to be in "key=value" format. </description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>-1</cardinality>
      </parameter>
      <parameter>
        <name>retryDelay</name>
        <description>Wait time between retries in case of failures/disconnects.</description>
        <optional>true</optional>
        <type>float64</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>retryOnClose</name>
        <description>Retry connecting if the connection has been closed. Default is false</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>url</name>
        <description>URL endpoint to connect to.</description>
        <optional>false</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts/>
    <outputPorts>
      <outputPortSet>
        <description>Data received from the server will be sent on this port.</description>
        <windowPunctuationOutputMode>Generating</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
      <outputPortSet>
        <description>Error information will be sent out on this port including the response code and any message recieved from the server. Tuple structure must conform to the [HTTPResponse] type specified in this namespace.</description>
        <windowPunctuationOutputMode>Free</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>true</optional>
      </outputPortSet>
    </outputPorts>
  </javaOperatorModel>
</operatorModel>