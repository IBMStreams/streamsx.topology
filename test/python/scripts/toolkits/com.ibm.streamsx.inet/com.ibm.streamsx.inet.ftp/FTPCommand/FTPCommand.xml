<?xml version="1.0" ?>
<!--
Copyright (C) 2013-2014, International Business Machines Corporation
All Rights Reserved
-->
<operatorModel
  xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" 
  xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <cppOperatorModel>
    <context>
      <description docHref="doc/${nl}/spldoc/html/tk$com.ibm.streamsx.inet/op$com.ibm.streamsx.inet.ftp$FTPCommand.html">
The `FTPCommand` operator can run an **ftp** command at a remote host by using the FTP, FTPS, or SFTP protocols. 
Possible commands are: **none**, **del**, **rm**, **rmdir**, **mkdir**, **rename**, **modificationTime**, and **pwd**. 
The **modificationTime** is not possible in the SFTP protocol. 
The command string and the command arguments are received from port 0.

The FTPCommand operator must not be used inside a consistent region!
      </description>
      <iconUri size="16">ftpCommand_16.gif</iconUri>
      <iconUri size="32">ftpCommand_32.gif</iconUri>
      <!-- some optional elements
      <metrics>
        <metric>
          <name>metricName</name>
          <description>Metric description</description>
          <kind>Counter</kind>
        </metric>
      </metrics>
      -->
      <customLiterals>
        <enumeration>
          <name>CommandLiteral</name>
          <value>del</value>
          <value>mkdir</value>
          <value>rename</value>
          <value>modificationTime</value>
          <value>pwd</value>
        </enumeration>
      </customLiterals>
      <customOutputFunctions>
        <customOutputFunction>
          <name>GetData</name>
          <function>
            <description>Get the command result string</description>
            <prototype><![CDATA[rstring Result()]]></prototype>
          </function>
          <function>
            <description>Get the command success indication.</description>
            <prototype><![CDATA[boolean Success()]]></prototype>
          </function>
          <function>
            <description>This function returns a string with the url including schema.</description>
            <prototype><![CDATA[rstring Url()]]></prototype>
          </function>
          <function>
            <description>Deprecated: Get the number of executed ftp commands(in case of rename only one is counted). Use function CommandCount() instead.</description>
            <prototype><![CDATA[uint32 NoCommands()]]></prototype>
          </function>
          <function>
            <description>Get the number of executed ftp commands(in case of rename only one is counted)</description>
            <prototype><![CDATA[uint32 CommandCount()]]></prototype>
          </function>
          <function>
            <description>Deprecated: Get the number of failed ftp commands. Use function CommandFailureCount() instead.</description>
            <prototype><![CDATA[uint32 NoFailures()]]></prototype>
          </function>
          <function>
            <description>Get the number of failed ftp commands</description>
            <prototype><![CDATA[uint32 CommandFailureCount()]]></prototype>
          </function>
          <function>
            <description>Return the argument unchanged.</description>
            <prototype><![CDATA[<any T> T AsIs(T)]]></prototype>
          </function>
        </customOutputFunction>
        <customOutputFunction>
          <name>GetError</name>
          <function>
            <description>Deprecated: Get the error number. Use function ErrorCode() instead.</description>
            <prototype><![CDATA[int32 Error()]]></prototype>
          </function>
          <function>
            <description>Get the error number</description>
            <prototype><![CDATA[int32 ErrorCode()]]></prototype>
          </function>
          <function>
            <description>Get the error description</description>
            <prototype><![CDATA[rstring ErrorText()]]></prototype>
          </function>
          <function>
            <description>This function returns a string with the url including schema.</description>
            <prototype><![CDATA[rstring Url()]]></prototype>
          </function>
          <function>
            <description>Deprecated: Get the number of executed ftp commands(in case of rename only one is counted). Use function CommandCount() instead.</description>
            <prototype><![CDATA[uint32 NoTransfers()]]></prototype>
          </function>
          <function>
            <description>Get the number of executed ftp commands(in case of rename only one is counted)</description>
            <prototype><![CDATA[uint32 CommandCount()]]></prototype>
          </function>
          <function>
            <description>Deprecated: Get the number of failed ftp commands. Use function CommandFailureCount() instead.</description>
            <prototype><![CDATA[uint32 NoTransferFailures()]]></prototype>
          </function>
          <function>
            <description>Get the number of failed ftp commands</description>
            <prototype><![CDATA[uint32 CommandFailureCount()]]></prototype>
          </function>
          <function>
            <description>Return the argument unchanged.</description>
            <prototype><![CDATA[<any T> T AsIs(T)]]></prototype>
          </function>
        </customOutputFunction>
      </customOutputFunctions>
      <libraryDependencies>
        <library>
          <cmn:description>curl lib</cmn:description>
          <cmn:managedLibrary>
            <cmn:lib>curl</cmn:lib>
            <cmn:libPath></cmn:libPath>
            <cmn:includePath></cmn:includePath>
          </cmn:managedLibrary>
        </library>
        <library>
          <cmn:description>FTP wrapper lib</cmn:description>
          <cmn:managedLibrary>
            <cmn:lib>inettoolkit</cmn:lib>
            <cmn:libPath>../../impl/lib</cmn:libPath>
            <cmn:includePath>../../impl/include</cmn:includePath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
      <providesSingleThreadedContext>Always</providesSingleThreadedContext>
      <allowCustomLogic>false</allowCustomLogic>
      <codeTemplates>
        <codeTemplate name="FTPCommand-Remove">
          <description>FTPCommand used to remove file</description>
          <template>
stream&lt;rstring fileName, boolean success&gt; ${ResultStream} as OUT = FTPCommand(${CommandStream} as IN) {
	param
		protocol : ftp;
		host : IN.host;
		path : IN.path + "/";
		filename : IN.fileName;
		command : "del";
		username : "${username}";
		password : "${password}";
	output OUT :
		success = Success();
}</template>
        </codeTemplate>
      </codeTemplates>
    </context>
    <parameters>
      <allowAny>false</allowAny>
      <parameter>
        <name>protocol</name>
        <description>Protocol and encryption properties of the connection. This parameter takes one value of type [Protocol]</description>
        <optional>false</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>AttributeFree</expressionMode>
        <type>enum&#123;ftp,ftpSSLAll,ftpSSLControl,ftpSSLTry,ftps,sftp&#125;</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>command</name>
        <description>the command to be executed</description>
        <optional>false</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>rstring</type>
        <cardinality>1</cardinality>
        <portScope><port>0</port></portScope>
      </parameter>
      <parameter>
        <name>host</name>
        <description>Hostname or IP address of the remote host in form hostname\[:port\].</description>
        <optional>false</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>rstring</type>
        <cardinality>1</cardinality>
        <portScope><port>0</port></portScope>
      </parameter>
      <parameter>
        <name>path</name>
        <description>
The path of the remote directory where the command is executed. The parameter must end with a '/'. 
The path should begin with '/'. In case of ftp protocols the path is relative to the home directory of the user and may depend on the server configuration. In case of ftp protocol an absolute path must start with '//'.
In case of sftp the path is an absolute path. A path relative to users home directory may be entered in the form '~/'.
        </description>
        <optional>false</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>rstring</type>
        <cardinality>1</cardinality>
        <portScope><port>0</port></portScope>
      </parameter>
      <parameter>
        <name>username</name>
        <description>The ftp username. If the operator has two input ports and this parameter is an attribute parameter it must be supplied from the second input port.</description>
        <optional>false</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>password</name>
        <description>The password for the ftp user. If the operator has two input ports and this parameter is an attribute parameter it must be supplied from the second input port.</description>
        <optional>true</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>filename</name>
        <description>The command argument / may be empty for pwd</description>
        <optional>true</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>rstring</type>
        <cardinality>1</cardinality>
        <portScope><port>0</port></portScope>
      </parameter>
      <parameter>
        <name>filenameTo</name>
        <description>The to filename for rename - must be non empty for rename command</description>
        <optional>true</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>rstring</type>
        <cardinality>1</cardinality>
        <portScope><port>0</port></portScope>
      </parameter>
      <parameter>
        <name>connectionCloseMode</name>
        <description>
This optionally parameter controls when the closing of connection after transfer. The parameter takes one value of type [ConnectionCloseMode]. Default value is `never`.</description>
        <optional>true</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>AttributeFree</expressionMode>
        <type>enum&#123;never, ever, punct&#125;</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>connectionTimeout</name>
        <description>This is the maximum time in seconds that you allow the connection to the server to take. This only limits the connection phase, once it has connected, this option is of no more use. Set to zero to switch to the default built-in connection timeout - 120 seconds. See also the `transferTimeout` parameter.</description>
        <optional>true</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>int32</type>
        <cardinality>1</cardinality>
        <portScope><port>0</port></portScope>
      </parameter>
      <parameter>
        <name>transferTimeout</name>
        <description>This is the maximum time in seconds that you allow the libcurl transfer operation to take. Normally, name lookups can take a considerable time. Default timeout is 0 (zero) which means it never times out.</description>
        <optional>true</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>Expression</expressionMode>
        <type>int32</type>
        <cardinality>1</cardinality>
        <portScope><port>0</port></portScope>
      </parameter>
      <parameter>
        <name>curlVerbose</name>
        <description>Verbose mode for curl lib default is false. The curl information are sent stderr.</description>
        <optional>true</optional>
        <rewriteAllowed>true</rewriteAllowed>
        <expressionMode>AttributeFree</expressionMode>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>sendStatisticsOnError</name>
        <description>If set to true, the operator sends out a statistics tuple on port 0 when the operation fails. Default value is true.</description>
        <optional>true</optional>
        <rewriteAllowed>false</rewriteAllowed>
        <expressionMode>Constant</expressionMode>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts>
      <inputPortSet>
        <description>This input port triggers a ftp command execution. Typically the requested command and parameters are received from stream attributes.</description>
        <tupleMutationAllowed>false</tupleMutationAllowed>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </inputPortSet>      
      <inputPortSet>
        <description>This optional input port may be used to set/change the username and password.</description>
        <tupleMutationAllowed>false</tupleMutationAllowed>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
        <controlPort>true</controlPort>
        <cardinality>1</cardinality>
        <optional>true</optional>
      </inputPortSet>
    </inputPorts>
    <outputPorts>
      <outputPortSet>
        <description>This mandatory port delivers command results and additional statistics information. The GetData output functions must be applied to this port.</description>
        <expressionMode>Expression</expressionMode> 
        <autoAssignment>true</autoAssignment>
        <completeAssignment>true</completeAssignment>
        <rewriteAllowed>true</rewriteAllowed>
        <outputFunctions>
          <default>AsIs</default>
          <type>GetData</type>
        </outputFunctions>
        <windowPunctuationOutputMode>Free</windowPunctuationOutputMode>
        <finalPunctuationPortScope>
          <port>0</port>
        </finalPunctuationPortScope>
        <tupleMutationAllowed>true</tupleMutationAllowed>
        <outputAssignmentPortScope>
          <port>0</port>
        </outputAssignmentPortScope>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
      <outputPortSet>
        <description>This optional port may be used to carry error information and diagnostics. The GetError output functions may be applied to this port. If no output assignment is applied, the output stream must have a single attribute of type rstring.</description>
        <expressionMode>Expression</expressionMode> 
        <autoAssignment>false</autoAssignment>
        <completeAssignment>false</completeAssignment>
        <rewriteAllowed>true</rewriteAllowed>
        <outputFunctions>
          <default>AsIs</default>
          <type>GetError</type>
        </outputFunctions>
        <windowPunctuationOutputMode>Free</windowPunctuationOutputMode>
        <finalPunctuationPortScope>
          <port>0</port>
        </finalPunctuationPortScope>
        <tupleMutationAllowed>true</tupleMutationAllowed>
        <outputAssignmentPortScope>
          <port>0</port>
        </outputAssignmentPortScope>
        <cardinality>1</cardinality>
        <optional>true</optional>
      </outputPortSet>
    </outputPorts>
  </cppOperatorModel>
</operatorModel>
