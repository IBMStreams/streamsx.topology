<?xml version="1.0" encoding="UTF-8"?><operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <javaOperatorModel>
    <!--Generated from com.ibm.streamsx.inet.wsserver.WebSocketInject in impl/lib/com.ibm.streamsx.inetserver.jar at Fri Oct 19 13:32:33 CEST 2018-->
    <context>
      <description> Operator recieves messages from WebSocket clients and generates a tuple which is sent to streams.  Each received message is output as tuple. The data received is dependent upon the input ports schema.</description>
      <iconUri size="16">WebSocketInject_16.gif</iconUri>
      <iconUri size="32">WebSocketInject_32.gif</iconUri>
      <metrics>
        <metric>
          <name>nClientsConnected</name>
          <description>Number of clients currently connected to WebSocket port.</description>
          <kind>Gauge</kind>
        </metric>
        <metric>
          <name>nMessagesReceived</name>
          <description>Number of messages received via WebSocket</description>
          <kind>Counter</kind>
        </metric>
      </metrics>
      <executionSettings>
        <className>com.ibm.streamsx.inet.wsserver.WebSocketInject</className>
      </executionSettings>
      <libraryDependencies>
        <library>
          <cmn:description>Operator class library</cmn:description>
          <cmn:managedLibrary>
            <cmn:libPath>../../impl/lib/com.ibm.streamsx.inetserver.jar</cmn:libPath>
            <cmn:libPath>../../opt/wssupport/Java-WebSocket-1.3.0.jar</cmn:libPath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
    </context>
    <parameters>
      <parameter>
        <name>ackCount</name>
        <description>The operator sends out an ack message to all currently connected clients.  An ack message is sent when the (totaslNumberOfMessagesRecieved % ackCount) == 0, The ack message is a in JSON format \{ status:'COUNT', text:&lt;totalNumberOfMessagesReceived&gt;\}. Default value is 0, no ack messages will be sent.</description>
        <optional>true</optional>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>initDelay</name>
        <description>Delay in seconds before the operator starts producing tuples.</description>
        <optional>true</optional>
        <type>int64</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>messageAttribute</name>
        <description>Input port's attribute that the data received will be stored to. If the port has more than one attribute this parameter is required. </description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>port</name>
        <description>WebSocket network port that messages arrive on. The WebSocket client(s) use this port to transmit on.</description>
        <optional>false</optional>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>senderIdAttribute</name>
        <description>Input port attribute that will we loaded with the message sender's identifier, this identifier is consistent during the lifetime of the sender's session.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts/>
    <outputPorts>
      <outputPortSet>
        <description>First attribute will have the message received via the WebSocket, of type rstring. Second attribute (if provided) will have the senders unique id, or type rstring.Subsequent attribute(s) are allowed and will not be poplulated.</description>
        <windowPunctuationOutputMode>Free</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
    </outputPorts>
  </javaOperatorModel>
</operatorModel>