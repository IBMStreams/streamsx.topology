/* Additional includes go here */
#include "splpy_funcop.h"

using namespace streamsx::topology;

<%SPL::CodeGen::headerPrologue($model);%>

class MY_OPERATOR : public MY_BASE_OPERATOR 
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR(); 

  // Notify termination
  void prepareToShutdown(); 

  // Tuple processing for non-mutating ports
  void process(Tuple const & tuple, uint32_t port);
  void process(Punctuation const & punct, uint32_t port);

private:
    SplpyOp * op() { return funcop_; }

    // Members
    // Control for interaction with Python
    SplpyFuncOp *funcop_;
    
    PyObject *pyInStyleObj_;

    // Number of output connections when passing by ref
    // -1 when cannot pass by ref
    int32_t occ_;
}; 

<%SPL::CodeGen::headerEpilogue($model);%>

