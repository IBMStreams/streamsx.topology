/*
 * # Licensed Materials - Property of IBM
 * # Copyright IBM Corp. 2015,2016
 */

#include "splpy_pyop.h"

using namespace streamsx::topology;

<%SPL::CodeGen::headerPrologue($model);%>
<%
  require "splpy_operator.pm";
%>
@include "../../opt/.__splpy/common/py_disallow_cr_trigger.cgt"

class MY_OPERATOR : public MY_BASE_OPERATOR, public DelegatingStateHandler
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR(); 

  // Notify pending shutdown
  void prepareToShutdown(); 

  // Tuple processing for non-mutating ports
  void process(Tuple const & tuple, uint32_t port);

  // Punctuation processing
  void process(Punctuation const & punct, uint32_t port);
private:
    SplpyOp *op() { return pyop_; }

  // Members
    SplpyPyOp *pyop_;
    PyObject *pyInNames_;

@include "../../opt/.__splpy/common/py_enable_cr.cgt"
}; 

<%SPL::CodeGen::headerEpilogue($model);%>
