/*
 * # Licensed Materials - Property of IBM
 * # Copyright IBM Corp. 2015  
 */

#include "splpy_pyop.h"

using namespace streamsx::topology;

<%SPL::CodeGen::headerPrologue($model);%>

<%
  my $oport = $model->getOutputPortAt(0);
  my $iport = $model->getInputPortAt(0);
%>

class MY_OPERATOR : public MY_BASE_OPERATOR 
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR(); 

  // Notify pending shutdown
  void prepareToShutdown(); 

  // Tuple processing for non-mutating ports
  void process(Tuple const & tuple, uint32_t port);

  // Punctuation processing
  void process(Punctuation const & punct, uint32_t port);
private:
    SplpyOp *op() { return pyop_; }
  // Members
    SplpyPyOp *pyop_;

    PyObject *pyInNames_;
    PyObject *pyOutNames_0;

    void pySubmitTuplesPort0(PyObject * value, <%=$iport->getCppTupleType()%> const & ituple);
    void fromPythonToPort0(PyObject * pyTuple, <%=$iport->getCppTupleType()%> const & ituple);
    void fromPythonDictToPort0(PyObject * pyDict, <%=$iport->getCppTupleType()%> const & ituple);
}; 

<%SPL::CodeGen::headerEpilogue($model);%>
