/*
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2015  
 */

/**
 * Interchangeable SPL types.
 * SPL tuple types that can be used to interchange
 * streams between IBM Streams applications implemented
 * in different languages, such as SPL and Java.
 *
 * SPL uses structural equivalence for types,
 * which means that types of the same structural composition
 * are considered identical. This means that another
 * toolkit or application need not use these type
 * definitions, and thus can avoid being dependent
 * on this toolkit. For example all these streams
 * definitions are identical:
 *
 * * `stream<rstring jsonString>`
 * * `stream<com.ibm.streamsx.json.Json>`
 * * `stream<com.ibm.streamsx.topology.Json>`
*/

namespace com.ibm.streamsx.topology;

/**
* Tuple type for representing JSON in SPL.
*/
type Json = rstring jsonString;

/**
* Tuple type representing string tuples published
* by an application from the Java Application API.
* Using this schema in an SPL application with
* [com.ibm.streamsx.topology.topic::Publish]
* and [com.ibm.streamsx.topology.topic::Subscribe]
* allows exchange of tuples between SPL and Java.
* 
* Any Java stream of type `TStream<String>`
* published by a Java application will have this schema.
*/
type String = rstring string;

/**
* Tuple type representing XML tuples published
* by an application from the Java Application API.
* Using this schema in an SPL application with
* [com.ibm.streamsx.topology.topic::Publish]
* and [com.ibm.streamsx.topology.topic::Subscribe]
* allows exchange of tuples between SPL and Java.
* 
* Any Java stream of type `TStream<com.ibm.streams.operator.types.XML>`
* published by a Java application will have this schema.
*/
type XML = xml document;

/**
* Tuple type representing binary tuples published
* by an application from the Java Application API.
* Using this schema in an SPL application with
* [com.ibm.streamsx.topology.topic::Publish]
* and [com.ibm.streamsx.topology.topic::Subscribe]
* allows exchange of tuples between SPL and Java.
* 
* Any Java stream of type `TStream<com.ibm.streams.operator.types.Blob>`
* published by a Java application will have this schema.
*/
type Blob = blob binary;
